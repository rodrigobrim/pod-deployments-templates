apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  generation: 1
  labels:
    app: {{ pod.app }}
  name: {{ pod.app }}
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: {{ pod.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ pod.app }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ pod.app }}
    spec:
      containers:
      - image: {{ pod.image }}
        imagePullPolicy: IfNotPresent
        name: todo-backend
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

{% for env in environment_vars %}
{% if loop.first %}
        env:
{% endif %}
        - name: {{ env.name }}
          value: {{ env.value }}
{% endfor %}

      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

apiVersion: v1
kind: Service
metadata:
  finalizers:
  - service.kubernetes.io/load-balancer-cleanup
  labels:
    app: {{ pod.app }}
  name: {{ pod.app }}
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: {{ pod.expose.port }}
    protocol: TCP
    targetPort: {{ pod.expose.target_port }}
  selector:
    app: {{ pod.app }}
  sessionAffinity: None
  type: LoadBalancer
